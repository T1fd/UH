{
 'Реквизиты': {
  'Наименование': 'Отправить нетиповые оповещения по СПЗ',
  'ТекстОбработки': 'Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	НастройкиОповещений.КатегорияОповещения КАК КатегорияОповещения,
               |	НастройкиОповещений.ВидСобытияОповещения КАК ВидСобытияОповещения,
               |	НастройкиОповещений.ТипОбъектаОповещения КАК ТипОбъектаОповещения,
               |	НастройкиОповещений.ВидОбъектаОповещения КАК ВидОбъектаОповещения,
               |	НастройкиОповещений.ПериодНапоминания КАК ПериодНапоминания,
               |	НастройкиОповещений.ИнтервалВремениНапоминания КАК ИнтервалВремениНапоминания,
               |	НастройкиОповещений.ПериодПослеСобытия КАК ПериодПослеСобытия,
               |	НастройкиОповещений.ШаблонОповещения КАК ШаблонОповещения,
               |	НастройкиОповещений.ВнешняяПечатнаяФорма КАК ВнешняяПечатнаяФорма
               |ПОМЕСТИТЬ ВтНастройки
               |ИЗ
               |	РегистрСведений.НастройкиОповещений КАК НастройкиОповещений
               |ГДЕ
               |	НастройкиОповещений.Т1_НетиповоеОповещение
               |	И НастройкиОповещений.КатегорияОповещения = ЗНАЧЕНИЕ(Справочник.КатегорииСобытийОповещений.Напоминания)
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ РАЗЛИЧНЫЕ
               |	ОтложеннаяОбработкаЭтаповПроцессовСрезПоследних.ДокументПроцесса.КлючевойОбъектПроцесса КАК КлючевойОбъектПроцесса,
               |	ОтложеннаяОбработкаЭтаповПроцессовСрезПоследних.ЭтапПроцесса КАК ЭтапПроцесса,
               |	ВЫРАЗИТЬ(ОтложеннаяОбработкаЭтаповПроцессовСрезПоследних.ДокументПроцесса.КлючевойОбъектПроцесса КАК Документ.СтрокаПланаЗакупок).Т1_Инициатор КАК Ответственный
               |ПОМЕСТИТЬ ВтЭтапы
               |ИЗ
               |	РегистрСведений.ОтложеннаяОбработкаЭтаповПроцессов.СрезПоследних КАК ОтложеннаяОбработкаЭтаповПроцессовСрезПоследних
               |ГДЕ
               |	ОтложеннаяОбработкаЭтаповПроцессовСрезПоследних.ЭтапПроцесса В
               |			(ВЫБРАТЬ
               |				ВтНастройки.ВидОбъектаОповещения КАК ВидОбъектаОповещения
               |			ИЗ
               |				ВтНастройки КАК ВтНастройки
               |			ГДЕ
               |				ВтНастройки.ВидСобытияОповещения = ЗНАЧЕНИЕ(Справочник.ВидыСобытийОповещений.Напоминание_НачалоПодготовкиЗакупки))
               |	И НЕ ОтложеннаяОбработкаЭтаповПроцессовСрезПоследних.Выполнено
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВтЭтапы.КлючевойОбъектПроцесса КАК КлючевойОбъектПроцесса,
               |	ВтНастройки.КатегорияОповещения КАК КатегорияОповещения,
               |	ВтНастройки.ВидСобытияОповещения КАК ВидСобытияОповещения,
               |	ВтНастройки.ТипОбъектаОповещения КАК ТипОбъектаОповещения,
               |	ВтНастройки.ВидОбъектаОповещения КАК ВидОбъектаОповещения,
               |	ВтНастройки.ПериодНапоминания КАК ПериодНапоминания,
               |	ВтНастройки.ИнтервалВремениНапоминания КАК ИнтервалВремениНапоминания,
               |	ВтНастройки.ПериодПослеСобытия КАК ПериодПослеСобытия,
               |	ВтНастройки.ШаблонОповещения КАК ШаблонОповещения,
               |	ВтЭтапы.Ответственный КАК Ответственный,
               |	ВтНастройки.ВнешняяПечатнаяФорма КАК ВнешняяПечатнаяФорма
               |ИЗ
               |	ВтНастройки КАК ВтНастройки
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтЭтапы КАК ВтЭтапы
               |		ПО ВтНастройки.ВидОбъектаОповещения = ВтЭтапы.ЭтапПроцесса
               |		И ВтЭтапы.Ответственный <> Значение(Справочник.Пользователи.ПустаяСсылка)";

ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();    

Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
	ДопПараметры = Неопределено;		
	МодульУправленияОповещениямиУХ.ДобавитьДопПараметрВТаблицу(ДопПараметры, "ПолучательОповещения", ВыборкаДетальныеЗаписи.Ответственный);  
	ШаблонРабочий = Справочники.ШаблоныОповещений.ПустаяСсылка();
	Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ШаблонОповещения) Тогда
		ТекстСообщения = МодульУправленияОповещениямиУХ.ПолучитьТекстОповещенияПоВидуСобытияПоУмолчанию(ВыборкаДетальныеЗаписи.КатегорияОповещения, ВыборкаДетальныеЗаписи.ВидСобытияОповещения, ВыборкаДетальныеЗаписи.КлючевойОбъектПроцесса);
		ШаблонРабочий = Справочники.ШаблоныОповещений.ПустаяСсылка();
	Иначе	 
		ШаблонРабочий = ВыборкаДетальныеЗаписи.ШаблонОповещения;
		ТекстСообщения = ""
	КонецЕсли;	

	// Оповестим в системе.
	СтруктураСобытия = Новый Структура;
	СтруктураСобытия.Вставить("СпособОповещения",		 Перечисления.СпособыОповещения.ВСистеме);
	СтруктураСобытия.Вставить("Получатель",				 ВыборкаДетальныеЗаписи.Ответственный);
	СтруктураСобытия.Вставить("ВидСобытия",				 ВыборкаДетальныеЗаписи.ВидСобытияОповещения);
	СтруктураСобытия.Вставить("Источник",				 ВыборкаДетальныеЗаписи.КлючевойОбъектПроцесса);
	СтруктураСобытия.Вставить("ШаблонОповещения",		 ШаблонРабочий);
	СтруктураСобытия.Вставить("ПараметрыСобытия",		 ДопПараметры);
	СтруктураСобытия.Вставить("Задача",					 Неопределено);
	СтруктураСобытия.Вставить("Этап",					 ВыборкаДетальныеЗаписи.ВидОбъектаОповещения);
	СтруктураСобытия.Вставить("ТекстСообщения",			 ТекстСообщения);
	СтруктураСобытия.Вставить("Замещаемый",				 Неопределено);
	СтруктураСобытия.Вставить("ВнешняяПечатнаяФорма",	 ВыборкаДетальныеЗаписи.ВнешняяПечатнаяФорма);
	СобытияОповещенийСерверУХ.СоздатьЗаписьСобытияПоСтруктуре(СтруктураСобытия);
	// Оповестим по электронной почте.
	Если ВыборкаДетальныеЗаписи.Ответственный.ОповещатьПоEmail Тогда
		СтруктураСобытия = Новый Структура;
		СтруктураСобытия.Вставить("СпособОповещения",		 Перечисления.СпособыОповещения.ЭлектроннаяПочта);
		СтруктураСобытия.Вставить("Получатель",				 ВыборкаДетальныеЗаписи.Ответственный);
		СтруктураСобытия.Вставить("ВидСобытия",				 ВыборкаДетальныеЗаписи.ВидСобытияОповещения);
		СтруктураСобытия.Вставить("Источник",				 ВыборкаДетальныеЗаписи.КлючевойОбъектПроцесса);
		СтруктураСобытия.Вставить("ШаблонОповещения",		 ШаблонРабочий);
		СтруктураСобытия.Вставить("ПараметрыСобытия",		 ДопПараметры);
		СтруктураСобытия.Вставить("Задача",					 Неопределено);
		СтруктураСобытия.Вставить("Этап",					 ВыборкаДетальныеЗаписи.ВидОбъектаОповещения);
		СтруктураСобытия.Вставить("ТекстСообщения",			 ТекстСообщения);
		СтруктураСобытия.Вставить("Замещаемый",				 Неопределено);
		СтруктураСобытия.Вставить("ВнешняяПечатнаяФорма",	 ВыборкаДетальныеЗаписи.ВнешняяПечатнаяФорма);
		СобытияОповещенийСерверУХ.СоздатьЗаписьСобытияПоСтруктуре(СтруктураСобытия);
	Иначе
		// Не требуется оповещать данного пользователя по почте.
	КонецЕсли;
КонецЦикла;
',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': []
  }
 ]
}
