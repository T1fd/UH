{
 'Реквизиты': {
  'Наименование': 'Постановка на мониторинг СПАРК',
  'ТекстОбработки': 'ТекДата = ТекущаяДатаСеанса(); 
ПустойВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ПустаяСсылка");  
ТипОшибкиНеПоставлен = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестнаяОшибка");   
Cookie = соединение.Cookie;
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	Контрагенты.Ссылка КАК Контрагент,
               |	Контрагенты.ИНН КАК ИНН,
               |	Контрагенты.РегистрационныйНомер КАК ОГРН,
	           |	Контрагенты.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо
               |ИЗ
               |	Справочник.Контрагенты КАК Контрагенты
               |ГДЕ
               |	Контрагенты.ИНН <> """"
               |	И НЕ Контрагенты.ГосударственныйОрган
               |	И НЕ Контрагенты.ПометкаУдаления   
               |	И НЕ Контрагенты.Самозанятый
               |	И НЕ Контрагенты.Ссылка В
               |				(ВЫБРАТЬ
               |					КонтрагентыНаМониторингеСПАРКРиски.Контрагент КАК Контрагент
               |				ИЗ
               |					РегистрСведений.КонтрагентыНаМониторингеСПАРКРиски КАК КонтрагентыНаМониторингеСПАРКРиски
               |				ГДЕ
               |					КонтрагентыНаМониторингеСПАРКРиски.Поставлен
		       |					
			   |				ОБЪЕДИНИТЬ ВСЕ
		       |					
			   |				ВЫБРАТЬ
			   |					КонтрагентыНаМониторингеСПАРКРиски.Контрагент
			   |				ИЗ
			   |					РегистрСведений.КонтрагентыНаМониторингеСПАРКРиски КАК КонтрагентыНаМониторингеСПАРКРиски
			   |				ГДЕ
			   |					НЕ КонтрагентыНаМониторингеСПАРКРиски.Поставлен
			   |					И КонтрагентыНаМониторингеСПАРКРиски.ТипОшибки = ЗНАЧЕНИЕ(Перечисление.ВидыОшибокСПАРКРиски.НеизвестнаяОшибка))
               |
               |СГРУППИРОВАТЬ ПО
               |	Контрагенты.ИНН,
               |	Контрагенты.РегистрационныйНомер,
               |	Контрагенты.Ссылка,
	           |	Контрагенты.ЮридическоеФизическоеЛицо"; 

ТаблицаКонтрагентов = Запрос.Выполнить().Выгрузить();

Для каждого Строка Из ТаблицаКонтрагентов Цикл					
	//поставить контрагента на мониторинг
	ЭтоЮрЛицо = Строка.ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	Если ЭтоЮрЛицо Тогда 
		XDTOЗапрос = Соединение.ВебСервис.ФабрикаXDTO.Создать(Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "MonActivate")); 
	Иначе
		XDTOЗапрос = Соединение.ВебСервис.ФабрикаXDTO.Создать(Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "MonActivateEntrepreneur")); 
	КонецЕсли;
	XDTOЗапрос.Inn = Строка.ИНН;  
	Если ЗначениеЗаполнено(Строка.ОГРН) И ЭтоЮрЛицо Тогда
		XDTOЗапрос.ogrn = Строка.ОГРН; 
	КонецЕсли;	
	МассивПараметров = новый Массив;
	МассивПараметров.Добавить(XDTOЗапрос); 
	Если ЭтоЮрЛицо Тогда 
		СтруктураОтвета = СервисСПАРКРиски.ВыполнитьЗапросСерверу(Соединение.ВебСервис,Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "MonActivateResponse"),"MonActivate",МассивПараметров,Cookie);
	Иначе
		СтруктураОтвета = СервисСПАРКРиски.ВыполнитьЗапросСерверу(Соединение.ВебСервис,Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "MonActivateEntrepreneurResponse"),"MonActivateEntrepreneur",МассивПараметров,Cookie);
	КонецЕсли;
	Если СтруктураОтвета.Ответ <> Неопределено Тогда
		Если ЭтоЮрЛицо Тогда 
			Ответ = СервисСПАРКРиски.ПолучитьОбъектXDTO(Соединение.ВебСервис.ФабрикаXDTO, Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "MonActivateResult"), СтруктураОтвета.Ответ.xmlData); 
		Иначе
			Ответ = СервисСПАРКРиски.ПолучитьОбъектXDTO(Соединение.ВебСервис.ФабрикаXDTO, Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "MonActivateEntrepreneurResult"), СтруктураОтвета.Ответ.xmlData); 
		КонецЕсли;	
		Если Ответ.ResultInfo.ResultType = "True" Тогда
			//запишем в регистр
			МенеджерЗаписи = РегистрыСведений.КонтрагентыНаМониторингеСПАРКРиски.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Контрагент = Строка.Контрагент;    
			МенеджерЗаписи.Поставлен = Истина;
			МенеджерЗаписи.ДатаПостановки = ТекДата;
			МенеджерЗаписи.ТипОшибки = ПустойВидОшибки;
			МенеджерЗаписи.Записать();   

			Если ЭтоЮрЛицо Тогда 
				XDTOЗапросОтчет = Соединение.ВебСервис.ФабрикаXDTO.Создать(Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "GetCompanySparkRisksReportXML"));  
			Иначе
				XDTOЗапросОтчет = Соединение.ВебСервис.ФабрикаXDTO.Создать(Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "GetPersonSparkRisksReportXML"));  
			КонецЕсли;					
			МассивПараметров = новый Массив;
			XDTOЗапросОтчет.Inn = Строка.ИНН;   
			Если ЗначениеЗаполнено(Строка.ОГРН) И ЭтоЮрЛицо Тогда
				XDTOЗапросОтчет.ogrn = Строка.ОГРН; 
			КонецЕсли;	
			МассивПараметров.Добавить(XDTOЗапросОтчет); 
			Если ЭтоЮрЛицо Тогда 
				СтруктураОтвета = СервисСПАРКРиски.ВыполнитьЗапросСерверу(Соединение.ВебСервис,Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "GetCompanySparkRisksReportXMLResponse"),"GetCompanySparkRisksReportXML",МассивПараметров,Cookie);
			Иначе
			    СтруктураОтвета = СервисСПАРКРиски.ВыполнитьЗапросСерверу(Соединение.ВебСервис,Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "GetPersonSparkRisksReportXMLResponse"),"GetPersonSparkRisksReportXML",МассивПараметров,Cookie);
			КонецЕсли;
			Если СтруктураОтвета.Ответ <> Неопределено Тогда
				Если ЭтоЮрЛицо Тогда 
					Ответ = СервисСПАРКРиски.ПолучитьОбъектXDTO(Соединение.ВебСервис.ФабрикаXDTO, Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "GetCompanySparkRisksReportXMLResult"), СтруктураОтвета.Ответ.xmlData);     
				Иначе
				    Ответ = СервисСПАРКРиски.ПолучитьОбъектXDTO(Соединение.ВебСервис.ФабрикаXDTO, Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "GetPersonSparkRisksReportXMLResult"), СтруктураОтвета.Ответ.xmlData);     
				КонецЕсли;
				ТекСвойство = Ответ.Свойства().Получить("Data");   
				ДанныеЗаписи = Новый Структура;    
				ДанныеЗаписи.Вставить("ДатаОбновления", ТекДата);      
				ДанныеЗаписи.Вставить("Активен", Истина); 
				ДанныеЗаписи.Вставить("Контрагент", Строка.Контрагент);   
				ДанныеЗаписи.Вставить("ИНН", Строка.ИНН); 
				ДанныеЗаписи.Вставить("ВидОшибки", ПустойВидОшибки);
				Если ТекСвойство <> Неопределено Тогда 
					Отчет = Ответ.Data.Report; 
					ТекСвойство = Отчет.Свойства().Получить("indexOfDueDiligence");     
					Если ТекСвойство <> Неопределено Тогда  
						ИндексДолжнойОсмотрительности = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Отчет.indexOfDueDiligence.index);
					Иначе
						ИндексДолжнойОсмотрительности = -1;
					КонецЕсли;	  
					ДанныеЗаписи.Вставить("ИндексДолжнойОсмотрительности", ИндексДолжнойОсмотрительности);

	                ТекСвойство = Отчет.Свойства().Получить("failureScore");     
					Если ТекСвойство <> Неопределено Тогда 
						ИндексФинансовогоРиска = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Отчет.failureScore.FailureScoreValue); 
					Иначе
						ИндексФинансовогоРиска = -1;
					КонецЕсли;	    
					ДанныеЗаписи.Вставить("ИндексФинансовогоРиска", ИндексФинансовогоРиска);

					ТекСвойство = Отчет.Свойства().Получить("PaymentIndex");     
					Если ТекСвойство <> Неопределено Тогда 
						ИндексПлатежнойДисциплины = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Отчет.PaymentIndex.PaymentIndexValue); 
					Иначе
						ИндексПлатежнойДисциплины = -1;
					КонецЕсли;	
					ДанныеЗаписи.Вставить("ИндексПлатежнойДисциплины", ИндексПлатежнойДисциплины);

					ТекСвойство = Отчет.Свойства().Получить("ConsolidatedIndicator");     
					Если ТекСвойство <> Неопределено Тогда 
						ИтогПоказатель = Отчет.ConsolidatedIndicator.Description; 
						Если ИтогПоказатель = "Низкий риск" Тогда
							СводныйИндикатор = 1;  
						ИначеЕсли ИтогПоказатель = "Средний риск" Тогда
							СводныйИндикатор = 2; 
						Иначе
							СводныйИндикатор = 3;  
						КонецЕсли;   
					Иначе 
						СводныйИндикатор = 0;
					КонецЕсли;	   
					ДанныеЗаписи.Вставить("СводныйИндикатор", СводныйИндикатор);    
					ТекСвойство = Отчет.Свойства().Получить("Status");     
					Если ТекСвойство <> Неопределено Тогда 
						Т1_СтатусКонтрагента = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Отчет.Status.GroupId);
					Иначе
						Т1_СтатусКонтрагента = -1;
					КонецЕсли;	  
					ДанныеЗаписи.Вставить("Т1_СтатусКонтрагента", Т1_СтатусКонтрагента); 
				КонецЕсли;    				
				СПАРКРиски.СохранитьЗначенияИндексовВКэше(ДанныеЗаписи);
			КонецЕсли;		 	
		Иначе
			//запишем в регистр
			МенеджерЗаписи = РегистрыСведений.КонтрагентыНаМониторингеСПАРКРиски.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Контрагент = Строка.Контрагент;    
			МенеджерЗаписи.Поставлен = Ложь;
			МенеджерЗаписи.ТипОшибки = ТипОшибкиНеПоставлен;
			МенеджерЗаписи.Записать();   
	
			//ЗаписьЖурналаРегистрации("Т1: Постановка на мониторинг СПАРК", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("Результат постановки на мониторинг отрицательный. Контрагент: %1, результат: %2", Строка.Контрагент, Ответ.ResultInfo.ResultType));	
		КонецЕсли;  
	Иначе	
		ЗаписьЖурналаРегистрации("Т1: Постановка на мониторинг СПАРК", УровеньЖурналаРегистрации.Ошибка,,, "Пустой ответ при постановке на мониоринг");	
	КонецЕсли; 
КонецЦикла;		  
		
//закрытие сеанса
XDTOЗапрос = Соединение.ВебСервис.ФабрикаXDTO.Создать(Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "End"));
МассивПараметров = новый Массив;
МассивПараметров.Добавить(XDTOЗапрос);
СтруктураОтвета = СервисСПАРКРиски.ВыполнитьЗапросСерверу(Соединение.ВебСервис,Соединение.ВебСервис.ФабрикаXDTO.Тип(Соединение.ПространствоИмен, "EndResponse"),"End",МассивПараметров,Cookie);
Если СтруктураОтвета.Ответ <> Неопределено Тогда
	РезультатЗакрытия = СтруктураОтвета.Ответ.EndResult;		
КонецЕсли;
',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': []
  }
 ]
}
