{
 'Реквизиты': {
  'Наименование': 'Оповещение о сбое данных - КИ контрагентов',
  'ТекстОбработки': '	//------------------------------------------------------------------------------
	//ПАРАМЕТРЫ                                          
	//------------------------------------------------------------------------------
	Отладка = Ложь;   
	 
	ДатаНачалаВыгрузки = ТекущаяДата();
	ТемаСообщения = ""+Система+" - Оповещение о сбое данных - КИ контрагентов "+Формат(ДатаНачалаВыгрузки,"ДФ=dd.MM.yyyy");  
	
	ПочтаПолучателей = "ssmirnov@t1.ru, dpopov@t1.ru";   
	 
	ГуидУчетнойЗаписиПочты = "12f1aa09-8983-11ec-96d9-005056015ee4";
	 
    Если Отладка Тогда 
    	ПочтаПолучателей = "ssmirnov@t1.ru";
    КонецЕсли;
	
	СимволПереносаСтроки = Символы.ПС + Символы.ВК;
	ТекстСообщения = "";
	
	//------------------------------------------------------------------------------
	//Сбор данных
	//------------------------------------------------------------------------------  
	пТекстЗапроса = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапроса");
	  	
	Запрос_КОМ = Соединение.NewObject("Запрос");
	Запрос_КОМ.Текст = пТекстЗапроса; 
	
	ПП = 0;
	Выборка_КОМ = Запрос_КОМ.Выполнить().Выбрать();
	Пока Выборка_КОМ.Следующий() Цикл
		ПП=ПП+1;
		НавСсылка = Соединение.ПолучитьНавигационнуюСсылку(Выборка_КОМ.Ссылка);
		ТекстСообщения = ТекстСообщения
			+ ПП +"."+ Символы.ТАБ  
			+ Выборка_КОМ.Наименование + Символы.ТАБ
			+ НавСсылка + СимволПереносаСтроки; 
			
		Если ПП >= 100 Тогда
			ТекстСообщения = ТекстСообщения + "........ и другие, их можно получить запросом:" + СимволПереносаСтроки+пТекстЗапроса; 
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	   
	//------------------------------------------------------------------------------
	//Отправка письма
	//------------------------------------------------------------------------------
	Если Выборка_КОМ.Количество() > 0 Тогда		 					  
		Алгоритм("ОтправитьEmail",ЗапросСсылка,ПочтаПолучателей,ТемаСообщения,ТекстСообщения,ТипТекстаПочтовогоСообщения.РазмеченныйТекст,ГуидУчетнойЗаписиПочты);	
		СтрокаОшибок = СтрокаОшибок + ""+Система+" - сообщения отправлены"+Символы.ПС;
	КонецЕсли;	
	
	Если не Отладка Тогда
		УстановитьДатуПоследнейВыгрузки(Система,ЗапросСсылка,ДатаНачалаВыгрузки);
	КонецЕсли;',
  'Комментарий': 'из проверки убраны пустые значения колонок "Значение", так как обмен УХ-ДО их сейчас очищает эту колонку. Решается по задаче  2141

Источник: Запрос. Вывод: текст'
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'ТекстЗапроса',
     'Разделитель': null,
     'ЗначениеСтрока': 'ВЫБРАТЬ РАЗЛИЧНЫЕ
	КонтрагентыКонтактнаяИнформация.Ссылка КАК Ссылка,
	КонтрагентыКонтактнаяИнформация.Ссылка.Наименование КАК Наименование
ИЗ
	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
ГДЕ
	КонтрагентыКонтактнаяИнформация.Тип <> ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.ПустаяСсылка)
	И (
	
	//КонтрагентыКонтактнаяИнформация.Значение ПОДОБНО "" ИЛИ
			КонтрагентыКонтактнаяИнформация.ЗначенияПолей ПОДОБНО ""
			ИЛИ КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
			ИЛИ КонтрагентыКонтактнаяИнформация.Вид.ПометкаУдаления ЕСТЬ NULL)',
     'Комментарий': ''
    },
    {
     'Имя': 'починка не заполненных xml и/или json',
     'Разделитель': null,
     'ЗначениеСтрока': 'Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Ссылка,
		|	КонтрагентыКонтактнаяИнформация.Ссылка.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	
		|			 КонтрагентыКонтактнаяИнформация.ЗначенияПолей ПОДОБНО """" ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Заменено = 0;
	ЗамененоКонтр = 0;
	Ошибок = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Об =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		БылоИзменение = Ложь;
		Для каждого стр из Об.КонтактнаяИнформация Цикл 
			
			//1. есть значения полей XML  и нет значения JSON
			Если стр.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес И ЗначениеЗаполнено(стр.ЗначенияПолей) И не ЗначениеЗаполнено(стр.Значение) Тогда 
				стр.Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВJSON(стр.ЗначенияПолей,Перечисления.ТипыКонтактнойИнформации.Адрес); 
				Заменено = Заменено + 1;   
				БылоИзменение = истина;
			КонецЕсли;
			
			//2. есть значения JSON  и нет значения полей XML
			Если стр.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес И ЗначениеЗаполнено(стр.Значение) И не ЗначениеЗаполнено(стр.ЗначенияПолей) Тогда 
				стр.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(стр.Значение,,Перечисления.ТипыКонтактнойИнформации.Адрес); 
				Заменено = Заменено + 1;   
				БылоИзменение = истина;
			КонецЕсли;
			
			//3. не заполнено ни json, ни xml, заполнить по представлению
			Если стр.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес И ЗначениеЗаполнено(стр.Представление) не ЗначениеЗаполнено(стр.Значение) И не ЗначениеЗаполнено(стр.ЗначенияПолей) Тогда 
				стр.Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(Представление,Перечисления.ТипыКонтактнойИнформации.Адрес); 
				стр.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(стр.Значение,,Перечисления.ТипыКонтактнойИнформации.Адрес); 
				Заменено = Заменено + 1;   
				БылоИзменение = истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если БылоИзменение Тогда   
			Об.ОбменДанными.Загрузка = Истина; 
			Об.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов",истина);
			Попытка
				Об.Записать();
				ЗамененоКонтр = ЗамененоКонтр + 1;   
			Исключение
				Ошибок = Ошибок + 1;
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Заменено " + Заменено);
	Сообщить("ЗамененоКонтр " + ЗамененоКонтр);  
	Сообщить("Ошибок " + Ошибок);',
     'Комментарий': ''
    },
    {
     'Имя': 'починка 9 адресов после загрузки некорр обработкой',
     'Разделитель': null,
     'ЗначениеСтрока': 'Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Ссылка,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КонтрагентыКонтактнаяИнформация.НомерСтроки) КАК НомерСтроки
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|
		|СГРУППИРОВАТЬ ПО
		|	КонтрагентыКонтактнаяИнформация.Ссылка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КонтрагентыКонтактнаяИнформация.НомерСтроки) = 9";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ЗамененоКонтр = 0;
	Ошибок = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Об =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		
		//0. ошибка 9 адресов. Проверить что именно она:
		Если Об.КонтактнаяИнформация.Количество() = 9 
			И Об.КонтактнаяИнформация[0].Тип = Перечисления.ТипыКонтактнойИнформации.Адрес 
			И Об.КонтактнаяИнформация[1].Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И Об.КонтактнаяИнформация[2].Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И Об.КонтактнаяИнформация[3].Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И Об.КонтактнаяИнформация[4].Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И Об.КонтактнаяИнформация[5].Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И Об.КонтактнаяИнформация[6].Тип = Перечисления.ТипыКонтактнойИнформации.ПустаяСсылка()
			И Об.КонтактнаяИнформация[7].Тип = Перечисления.ТипыКонтактнойИнформации.ПустаяСсылка()
			И Об.КонтактнаяИнформация[8].Тип = Перечисления.ТипыКонтактнойИнформации.ПустаяСсылка() Тогда
			
			//Оставляем 4,5,6 записи
			МассивСтрокКУдалению = Новый массив;
			МассивСтрокКУдалению.Добавить(Об.КонтактнаяИнформация[0]);  
			МассивСтрокКУдалению.Добавить(Об.КонтактнаяИнформация[1]);
			МассивСтрокКУдалению.Добавить(Об.КонтактнаяИнформация[2]);
			МассивСтрокКУдалению.Добавить(Об.КонтактнаяИнформация[6]);
			МассивСтрокКУдалению.Добавить(Об.КонтактнаяИнформация[7]);
			МассивСтрокКУдалению.Добавить(Об.КонтактнаяИнформация[8]);
			Для каждого стрУд из МассивСтрокКУдалению Цикл
				Об.КонтактнаяИнформация.Удалить(стрУд);	
			КонецЦикла;
			
            
			Об.КонтактнаяИнформация[0].Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(Об.КонтактнаяИнформация[0].Представление,Перечисления.ТипыКонтактнойИнформации.Адрес); 
			Об.КонтактнаяИнформация[0].ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Об.КонтактнаяИнформация[0].Значение,,Перечисления.ТипыКонтактнойИнформации.Адрес); 
			ОбъектКИ = УправлениеКонтактнойИнформациейСлужебный.JSONВКонтактнуюИнформациюПоПолям(Об.КонтактнаяИнформация[0].Значение, Перечисления.ТипыКонтактнойИнформации.Адрес);
			УправлениеКонтактнойИнформациейСлужебный.ЗаполнитьТехническиеПоляКонтактнойИнформации(Об.КонтактнаяИнформация[0],ОбъектКИ,Перечисления.ТипыКонтактнойИнформации.Адрес);
				
			Об.КонтактнаяИнформация[1].Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(Об.КонтактнаяИнформация[1].Представление,Перечисления.ТипыКонтактнойИнформации.Адрес); 
			Об.КонтактнаяИнформация[1].ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Об.КонтактнаяИнформация[1].Значение,,Перечисления.ТипыКонтактнойИнформации.Адрес); 
			ОбъектКИ = УправлениеКонтактнойИнформациейСлужебный.JSONВКонтактнуюИнформациюПоПолям(Об.КонтактнаяИнформация[1].Значение, Перечисления.ТипыКонтактнойИнформации.Адрес);
			УправлениеКонтактнойИнформациейСлужебный.ЗаполнитьТехническиеПоляКонтактнойИнформации(Об.КонтактнаяИнформация[1],ОбъектКИ,Перечисления.ТипыКонтактнойИнформации.Адрес);
				
			Об.КонтактнаяИнформация[2].Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(Об.КонтактнаяИнформация[2].Представление,Перечисления.ТипыКонтактнойИнформации.Адрес); 
			Об.КонтактнаяИнформация[2].ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Об.КонтактнаяИнформация[2].Значение,,Перечисления.ТипыКонтактнойИнформации.Адрес); 
			ОбъектКИ = УправлениеКонтактнойИнформациейСлужебный.JSONВКонтактнуюИнформациюПоПолям(Об.КонтактнаяИнформация[2].Значение, Перечисления.ТипыКонтактнойИнформации.Адрес);
			УправлениеКонтактнойИнформациейСлужебный.ЗаполнитьТехническиеПоляКонтактнойИнформации(Об.КонтактнаяИнформация[2],ОбъектКИ,Перечисления.ТипыКонтактнойИнформации.Адрес);
			
			УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформациюДляСписков(Об);
			
			Об.ОбменДанными.Загрузка = Истина; 
			Об.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов",истина);
			Попытка
				Об.Записать();
				ЗамененоКонтр = ЗамененоКонтр + 1;   
			Исключение
				Ошибок = Ошибок + 1;
			КонецПопытки;
			
		КонецЕсли;	
			
		
	КонецЦикла;
	
	Сообщить("ЗамененоКонтр " + ЗамененоКонтр);  
	Сообщить("Ошибок " + Ошибок);',
     'Комментарий': ''
    }
   ]
  }
 ]
}
